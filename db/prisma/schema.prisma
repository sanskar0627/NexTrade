generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  balances  Balance[]
  orders    Order[]
  trades    Trade[]
  
  @@map("users")
}

model Balance {
  id      String @id @default(cuid())
  userId  String
  asset   String
  locked  String @default("0")
  available String @default("0")
  
  user User @relation(fields: [userId], references: [id])
  
  @@unique([userId, asset])
  @@map("balances")
}

model Market {
  id          String @id @default(cuid())
  symbol      String @unique
  baseAsset   String
  quoteAsset  String
  lastPrice   String @default("0")
  volume      String @default("0")
  priceChange String @default("0")
  high        String @default("0")
  low         String @default("0")
  
  orders Order[]
  trades Trade[]
  
  @@map("markets")
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  marketId  String
  side      OrderSide
  type      OrderType
  quantity  String
  price     String?
  filled    String      @default("0")
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  
  user   User   @relation(fields: [userId], references: [id])
  market Market @relation(fields: [marketId], references: [id])
  trades Trade[]
  
  @@map("orders")
}

model Trade {
  id         String   @id @default(cuid())
  marketId   String
  buyOrderId String
  sellOrderId String
  buyerId    String
  sellerId   String
  quantity   String
  price      String
  timestamp  DateTime @default(now())
  
  market    Market @relation(fields: [marketId], references: [id])
  buyer     User   @relation(fields: [buyerId], references: [id])
  buyOrder  Order  @relation(fields: [buyOrderId], references: [id])
  
  @@map("trades")
}

enum OrderSide {
  BUY
  SELL
}

enum OrderType {
  MARKET
  LIMIT
}

enum OrderStatus {
  PENDING
  FILLED
  CANCELLED
  PARTIALLY_FILLED
}